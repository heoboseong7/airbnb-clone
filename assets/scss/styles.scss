@tailwind base;
@tailwind components;
@tailwind utilities;

// npm run css 를 실행하지 않으면 여기서의 변경사항이 static 폴더의 styles.css에 반영이 되지 않으므로 프론트엔드에 적용이 되지 않는다.
// 1 em == closest font-size
// rem(root em) == root font-size, default = 16px

.search-box{
    transition: box-shadow 0.2s linear;
}

.nav_link{
    @apply ml-8 border-b-2 border-white hover:border-gray-600 h-full flex items-center;
    a{
        @apply py-8 px-5 text-gray-700;
    }
}

.btn{
    @apply w-full text-center rounded-sm py-5 font-light text-lg;
}

.btn-link {
    @apply w-full text-center rounded-lg py-3 font-light text-lg text-white bg-red-500;
}

input,
textarea,
select {
    @apply w-full rounded-sm py-5 font-light text-lg text-left border border-gray-600 px-5 focus:outline-none focus:border-green-500;
}

textarea {
    resize: none;
    height: 100px;
}

select {
    height: 30px
}

form {
    .input {
        @apply mb-3 w-full;
        &.has_error {
            input {
                @apply bg-red-200 border-gray-600;
                &:focus {
                    @apply border-gray-600;
                }
            }
        }
    }
}

// .input.has_error -> input과 has_error가 class에 같이 있을 때 적용
// .input .has_error -> input안에 has_error가 있는 경우 적용

@keyframes messageFadeIn {
    0% {
        opacity: 0;
        transform: translateY(-50px);
    }
    5% {
        opacity: 1;
        transform: translateY(50px);
    }
    95% {
        opacity: 1;
        transform: translateY(50px);
    }
    100% {
        opacity: 0;
        transform: translateY(-50px);
    }
}
// forward를 적지 않으면 animation이 끝난 후 원래의 값으로 돌아감
.message {
    animation: messageFadeIn 5s ease-in-out forwards;
    &.error {
        @apply bg-red-600;
    }
    &.info {
        @apply bg-blue-500;
    }
    &.success {
        @apply bg-green-500;
    }
    &.warning {
        @apply bg-yellow-400;
    }
}